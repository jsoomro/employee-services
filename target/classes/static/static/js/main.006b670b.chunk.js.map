{"version":3,"sources":["services/EmployeeService.js","components/ListEmployees.jsx","components/CreateEmployee.jsx","components/ViewEmployee.jsx","App.js","reportWebVitals.js","index.js"],"names":["EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","ListEmployee","props","state","employees","addEmployee","bind","id","this","history","push","EmployeeService","getEmployees","then","res","setState","data","className","onClick","map","firstName","lastName","email","style","marginLeft","viewEmployee","Component","CreateEmployee","saveEmployee","e","preventDefault","phoneNumber","hireDate","salary","managerId","console","log","JSON","stringify","createEmployee","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","changePhoneNumberHandler","changeHireDateHandler","changeSalaryHandler","changeManagerIdHandler","placeholder","name","onChange","cancel","ViewEmployee","match","params","getEmployeeById","App","path","exact","component","ListEmployees","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.006b670b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8080/employees\";\r\n\r\nclass EmployeeService {\r\n\r\n    getEmployees(){\r\n        return axios.get(EMPLOYEE_API_BASE_URL);\r\n    }\r\n\r\n    createEmployee(employee){\r\n        return axios.post(EMPLOYEE_API_BASE_URL+'/add', employee);\r\n    }\r\n\r\n    getEmployeeById(employeeId){\r\n        return axios.get(EMPLOYEE_API_BASE_URL + '/' + employeeId);\r\n    }\r\n\r\n   \r\n}\r\n\r\nexport default new EmployeeService()","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\nclass ListEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                employees: []\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n       \r\n    }\r\n   \r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        EmployeeService.getEmployees().then((res) => {\r\n            this.setState({ employees: res.data});\r\n        });\r\n    }\r\n\r\n    addEmployee(){\r\n        this.props.history.push('/add-employee/_add');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">Employees List</h2>\r\n                 <div className = \"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}> Add Employee</button>\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Employee Id</th>\r\n                                    <th> Employee First Name</th>\r\n                                    <th> Employee Last Name</th>\r\n                                    <th> Employee Email Id</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.employees.map(\r\n                                        employee => \r\n                                        <tr key = {employee.id}>\r\n                                            <td>{ employee.id}</td>\r\n                                             <td> { employee.firstName} </td>   \r\n                                             <td> {employee.lastName}</td>\r\n                                             <td> {employee.email}</td>\r\n                                             <td>                                                 \r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployee","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass CreateEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            //id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            hireDate: '',\r\n            salary: '',\r\n            managerId: ''\r\n        }\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.changePhoneNumberHandler = this.changePhoneNumberHandler.bind(this);\r\n        this.changeHireDateHandler = this.changeHireDateHandler.bind(this);\r\n        this.changeSalaryHandler = this.changeSalaryHandler.bind(this);\r\n        this.changeManagerIdHandler = this.changeManagerIdHandler.bind(this);\r\n\r\n        this.saveEmployee = this.saveEmployee.bind(this);\r\n    }\r\n\r\n    \r\n    saveEmployee = (e) => {\r\n        e.preventDefault();\r\n        let employee = {\r\n            firstName: this.state.firstName, \r\n            lastName: this.state.lastName, \r\n            email: this.state.email,\r\n            phoneNumber: this.state.phoneNumber,\r\n            hireDate: this.state.hireDate,\r\n            salary: this.state.salary,\r\n            managerId: this.state.managerId\r\n        };\r\n        console.log('employee => ' + JSON.stringify(employee));\r\n\r\n        EmployeeService.createEmployee(employee).then(res =>{\r\n            this.props.history.push('/employees');\r\n        });\r\n    }\r\n    \r\n    changeFirstNameHandler= (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    changePhoneNumberHandler= (event) => {\r\n        this.setState({phoneNumber: event.target.value});\r\n    }\r\n\r\n    changeHireDateHandler= (event) => {\r\n        this.setState({hireDate: event.target.value});\r\n    } \r\n\r\n    changeSalaryHandler= (event) => {\r\n        this.setState({salary: event.target.value});\r\n    }\r\n    changeManagerIdHandler= (event) => {\r\n        this.setState({managerId: event.target.value});\r\n    }\r\n   \r\n\r\n    cancel(){\r\n        this.props.history.push('/employees');\r\n    }\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> First Name: </label>\r\n                                            <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\" \r\n                                                value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Last Name: </label>\r\n                                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" \r\n                                                value={this.state.lastName} onChange={this.changeLastNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"email\" className=\"form-control\" \r\n                                                value={this.state.email} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Phone Number: </label>\r\n                                            <input placeholder=\"Phone Number\" name=\"phoneNumber\" className=\"form-control\" \r\n                                                value={this.state.phoneNumber} onChange={this.changePhoneNumberHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Hire Date: </label>\r\n                                            <input placeholder=\"Hire Date\" name=\"hireDate\" className=\"form-control\" \r\n                                                value={this.state.hireDate} onChange={this.changeHireDateHandler}/>\r\n                                        </div>\r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label> Salary: </label>\r\n                                            <input placeholder=\"Salary\" name=\"salary\" className=\"form-control\" \r\n                                                value={this.state.salary} onChange={this.changeSalaryHandler}/>\r\n                                        </div>\r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label> Manager ID: </label>\r\n                                            <input placeholder=\"Manager ID\" name=\"managerId\" className=\"form-control\" \r\n                                                value={this.state.managerId} onChange={this.changeManagerIdHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveEmployee}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployee","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\nclass ViewEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employee: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\r\n            this.setState({employee: res.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className = \"text-center\"> View Employee Details</h3>\r\n                    <div className = \"card-body\">\r\n                         <div className = \"row\">\r\n                            <label> Employee ID: </label>\r\n                            <div> { this.state.employee.id }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee First Name: </label>\r\n                            <div> { this.state.employee.firstName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Last Name: </label>\r\n                            <div> { this.state.employee.lastName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Email ID: </label>\r\n                            <div> { this.state.employee.email }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Phone Number: </label>\r\n                            <div> { this.state.employee.phoneNumber }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Hire Date: </label>\r\n                            <div> { this.state.employee.hireDate }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Salary: </label>\r\n                            <div> { this.state.employee.salary }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Manager ID: </label>\r\n                            <div> { this.state.employee.managerId }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployee","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ListEmployees from './components/ListEmployees';\nimport CreateEmployee from './components/CreateEmployee';\nimport ViewEmployee from './components/ViewEmployee';\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n                <div className=\"container\">\n                    <Switch> \n                          <Route path = \"/\" exact component = {ListEmployees}></Route>\n                          <Route path = \"/employees\" component = {ListEmployees}></Route>\n                          <Route path = \"/add-employee\" component = {CreateEmployee}></Route>\n                          <Route path = \"/view-employee/:id\" component = {ViewEmployee}></Route>\n                    </Switch>\n                </div>\n        </Router>\n    </div>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}